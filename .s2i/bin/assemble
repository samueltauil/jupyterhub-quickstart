#!/bin/bash

set -eo pipefail

# Ensure we are using the latest pip and wheel packages.

pip install -U pip setuptools wheel

# Install base packages needed for running JupyterHub.

pip install -r /tmp/src/requirements.txt

# Install npm packages required by JupyterHub.

echo " -----> Installing npm packages."

npm install -g configurable-http-proxy

# Copy global JupyterHub config into place.

cp /tmp/src/jupyterhub_config.py /opt/app-root/etc/

# This S2I assemble script is only used when creating the custom image.
# For when running the image, or using it as a S2I builder, we use a second
# set of custom S2I scripts. We now need to move these into the correct
# location and have the custom image use those by dropping in an image
# metadata file which overrides the labels of the base image.

mkdir -p /tmp/.s2i

mv /tmp/src/builder/image_metadata.json /tmp/.s2i/image_metadata.json

mv /tmp/src/builder /opt/app-root/builder

# Also move into place helper scripts and the script to start JupyterHub.

mv /tmp/src/scripts/* /opt/app-root/bin/

mv /tmp/src/start-jupyterhub.sh /opt/app-root/bin/

rm -rf /tmp/src

## Install Conda

export CONDA_DIR=/opt/conda
export PATH=$CONDA_DIR/bin:$PATH
export MINICONDA_VERSION=4.5.11
cd /tmp 
wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
echo "e1045ee415162f944b6aebfe560b8fee *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - 
/bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR 
rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
echo "export PATH=$CONDA_DIR/bin:$PATH" >> ~/.bashrc

$CONDA_DIR/bin/conda config --system --prepend channels conda-forge
$CONDA_DIR/bin/conda config --system --set auto_update_conda false
$CONDA_DIR/bin/conda config --system --set show_channel_urls true 
$CONDA_DIR/bin/conda install --quiet --yes conda="${MINICONDA_VERSION%.*}.*" 
$CONDA_DIR/bin/conda update --all --quiet --yes 
conda clean -tipsy
fix-permissions $CONDA_DIR 

# Scripts used to be kept in /opt/app-root/scripts but are now in the
# directory /opt/app-root/bin. Create a symlink for wait-for-database
# for now until any templates running script from old location are
# purged.

mkdir -p /opt/app-root/scripts

ln -s /opt/app-root/bin/wait-for-database /opt/app-root/scripts/wait-for-database

# Ensure passwd/group file intercept happens for any shell environment.

echo "source /opt/app-root/etc/generate_container_user" >> /opt/app-root/etc/scl_enable

# Create additional directories.

echo " -----> Creating additional directories."

mkdir -p /opt/app-root/data

# Fixup permissions on directories and files.

fix-permissions /opt/app-root
